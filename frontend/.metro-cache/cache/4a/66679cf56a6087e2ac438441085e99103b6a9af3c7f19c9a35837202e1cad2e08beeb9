{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":23,"index":239},"end":{"line":6,"column":46,"index":262}}],"key":"lGv6jwyWtmgghjjYvCX5yhM2Jt0=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":36,"index":300},"end":{"line":7,"column":56,"index":320}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\").default;\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var react_native_1 = require(_dependencyMap[2], \"react-native\");\n  var invariant_1 = __importDefault(require(_dependencyMap[3], \"invariant\"));\n  var Voice = react_native_1.NativeModules.Voice;\n  // NativeEventEmitter is only availabe on React Native platforms, so this conditional is used to avoid import conflicts in the browser/server\n  var voiceEmitter = react_native_1.Platform.OS !== 'web' ? new react_native_1.NativeEventEmitter(Voice) : null;\n  var RCTVoice = /*#__PURE__*/function () {\n    function RCTVoice() {\n      _classCallCheck(this, RCTVoice);\n      this._loaded = false;\n      this._listeners = null;\n      this._events = {\n        onSpeechStart: () => {},\n        onSpeechRecognized: () => {},\n        onSpeechEnd: () => {},\n        onSpeechError: () => {},\n        onSpeechResults: () => {},\n        onSpeechPartialResults: () => {},\n        onSpeechVolumeChanged: () => {}\n      };\n    }\n    return _createClass(RCTVoice, [{\n      key: \"removeAllListeners\",\n      value: function removeAllListeners() {\n        Voice.onSpeechStart = undefined;\n        Voice.onSpeechRecognized = undefined;\n        Voice.onSpeechEnd = undefined;\n        Voice.onSpeechError = undefined;\n        Voice.onSpeechResults = undefined;\n        Voice.onSpeechPartialResults = undefined;\n        Voice.onSpeechVolumeChanged = undefined;\n      }\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        if (!this._loaded && !this._listeners) {\n          return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n          Voice.destroySpeech(error => {\n            if (error) {\n              reject(new Error(error));\n            } else {\n              if (this._listeners) {\n                this._listeners.map(listener => listener.remove());\n                this._listeners = null;\n              }\n              resolve();\n            }\n          });\n        });\n      }\n    }, {\n      key: \"start\",\n      value: function start(locale) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        if (!this._loaded && !this._listeners && voiceEmitter !== null) {\n          this._listeners = Object.keys(this._events).map(key => voiceEmitter.addListener(key, this._events[key]));\n        }\n        return new Promise((resolve, reject) => {\n          var callback = error => {\n            if (error) {\n              reject(new Error(error));\n            } else {\n              resolve();\n            }\n          };\n          if (react_native_1.Platform.OS === 'android') {\n            Voice.startSpeech(locale, Object.assign({\n              EXTRA_LANGUAGE_MODEL: 'LANGUAGE_MODEL_FREE_FORM',\n              EXTRA_MAX_RESULTS: 5,\n              EXTRA_PARTIAL_RESULTS: true,\n              REQUEST_PERMISSIONS_AUTO: true\n            }, options), callback);\n          } else {\n            Voice.startSpeech(locale, callback);\n          }\n        });\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        if (!this._loaded && !this._listeners) {\n          return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n          Voice.stopSpeech(error => {\n            if (error) {\n              reject(new Error(error));\n            } else {\n              resolve();\n            }\n          });\n        });\n      }\n    }, {\n      key: \"cancel\",\n      value: function cancel() {\n        if (!this._loaded && !this._listeners) {\n          return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n          Voice.cancelSpeech(error => {\n            if (error) {\n              reject(new Error(error));\n            } else {\n              resolve();\n            }\n          });\n        });\n      }\n    }, {\n      key: \"isAvailable\",\n      value: function isAvailable() {\n        return new Promise((resolve, reject) => {\n          Voice.isSpeechAvailable((isAvailable, error) => {\n            if (error) {\n              reject(new Error(error));\n            } else {\n              resolve(isAvailable);\n            }\n          });\n        });\n      }\n      /**\n       * (Android) Get a list of the speech recognition engines available on the device\n       * */\n    }, {\n      key: \"getSpeechRecognitionServices\",\n      value: function getSpeechRecognitionServices() {\n        if (react_native_1.Platform.OS !== 'android') {\n          invariant_1.default(Voice, 'Speech recognition services can be queried for only on Android');\n          return;\n        }\n        return Voice.getSpeechRecognitionServices();\n      }\n    }, {\n      key: \"isRecognizing\",\n      value: function isRecognizing() {\n        return new Promise(resolve => {\n          Voice.isRecognizing(isRecognizing => resolve(isRecognizing));\n        });\n      }\n    }, {\n      key: \"onSpeechStart\",\n      set: function (fn) {\n        this._events.onSpeechStart = fn;\n      }\n    }, {\n      key: \"onSpeechRecognized\",\n      set: function (fn) {\n        this._events.onSpeechRecognized = fn;\n      }\n    }, {\n      key: \"onSpeechEnd\",\n      set: function (fn) {\n        this._events.onSpeechEnd = fn;\n      }\n    }, {\n      key: \"onSpeechError\",\n      set: function (fn) {\n        this._events.onSpeechError = fn;\n      }\n    }, {\n      key: \"onSpeechResults\",\n      set: function (fn) {\n        this._events.onSpeechResults = fn;\n      }\n    }, {\n      key: \"onSpeechPartialResults\",\n      set: function (fn) {\n        this._events.onSpeechPartialResults = fn;\n      }\n    }, {\n      key: \"onSpeechVolumeChanged\",\n      set: function (fn) {\n        this._events.onSpeechVolumeChanged = fn;\n      }\n    }]);\n  }();\n  exports.default = new RCTVoice();\n});","lineCount":194,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"require"],[4,31,1,13],[4,32,1,13,"_dependencyMap"],[4,46,1,13],[4,92,1,13,"default"],[4,99,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"require"],[5,28,1,13],[5,29,1,13,"_dependencyMap"],[5,43,1,13],[5,86,1,13,"default"],[5,93,1,13],[6,2,2,0],[6,6,2,4,"__importDefault"],[6,21,2,19],[6,24,2,23],[6,28,2,27],[6,32,2,31],[6,36,2,35],[6,37,2,36,"__importDefault"],[6,52,2,51],[6,56,2,56],[6,66,2,66,"mod"],[6,69,2,69],[6,71,2,71],[7,4,3,4],[7,11,3,12,"mod"],[7,14,3,15],[7,18,3,19,"mod"],[7,21,3,22],[7,22,3,23,"__esModule"],[7,32,3,33],[7,35,3,37,"mod"],[7,38,3,40],[7,41,3,43],[8,6,3,45],[8,15,3,54],[8,17,3,56,"mod"],[9,4,3,60],[9,5,3,61],[10,2,4,0],[10,3,4,1],[11,2,5,0,"Object"],[11,8,5,6],[11,9,5,7,"defineProperty"],[11,23,5,21],[11,24,5,22,"exports"],[11,31,5,29],[11,33,5,31],[11,45,5,43],[11,47,5,45],[12,4,5,47,"value"],[12,9,5,52],[12,11,5,54],[13,2,5,59],[13,3,5,60],[13,4,5,61],[14,2,6,0],[14,6,6,6,"react_native_1"],[14,20,6,20],[14,23,6,23,"require"],[14,30,6,30],[14,31,6,30,"_dependencyMap"],[14,45,6,30],[14,64,6,45],[14,65,6,46],[15,2,7,0],[15,6,7,6,"invariant_1"],[15,17,7,17],[15,20,7,20,"__importDefault"],[15,35,7,35],[15,36,7,36,"require"],[15,43,7,43],[15,44,7,43,"_dependencyMap"],[15,58,7,43],[15,74,7,55],[15,75,7,56],[15,76,7,57],[16,2,8,0],[16,6,8,6,"Voice"],[16,11,8,11],[16,14,8,14,"react_native_1"],[16,28,8,28],[16,29,8,29,"NativeModules"],[16,42,8,42],[16,43,8,43,"Voice"],[16,48,8,48],[17,2,9,0],[18,2,10,0],[18,6,10,6,"voiceEmitter"],[18,18,10,18],[18,21,10,21,"react_native_1"],[18,35,10,35],[18,36,10,36,"Platform"],[18,44,10,44],[18,45,10,45,"OS"],[18,47,10,47],[18,52,10,52],[18,57,10,57],[18,60,10,60],[18,64,10,64,"react_native_1"],[18,78,10,78],[18,79,10,79,"NativeEventEmitter"],[18,97,10,97],[18,98,10,98,"Voice"],[18,103,10,103],[18,104,10,104],[18,107,10,107],[18,111,10,111],[19,2,10,112],[19,6,11,6,"RCTVoice"],[19,14,11,14],[20,4,12,4],[20,13,12,4,"RCTVoice"],[20,22,12,4],[20,24,12,18],[21,6,12,18,"_classCallCheck"],[21,21,12,18],[21,28,12,18,"RCTVoice"],[21,36,12,18],[22,6,13,8],[22,10,13,12],[22,11,13,13,"_loaded"],[22,18,13,20],[22,21,13,23],[22,26,13,28],[23,6,14,8],[23,10,14,12],[23,11,14,13,"_listeners"],[23,21,14,23],[23,24,14,26],[23,28,14,30],[24,6,15,8],[24,10,15,12],[24,11,15,13,"_events"],[24,18,15,20],[24,21,15,23],[25,8,16,12,"onSpeechStart"],[25,21,16,25],[25,23,16,27,"onSpeechStart"],[25,24,16,27],[25,29,16,33],[25,30,16,35],[25,31,16,36],[26,8,17,12,"onSpeechRecognized"],[26,26,17,30],[26,28,17,32,"onSpeechRecognized"],[26,29,17,32],[26,34,17,38],[26,35,17,40],[26,36,17,41],[27,8,18,12,"onSpeechEnd"],[27,19,18,23],[27,21,18,25,"onSpeechEnd"],[27,22,18,25],[27,27,18,31],[27,28,18,33],[27,29,18,34],[28,8,19,12,"onSpeechError"],[28,21,19,25],[28,23,19,27,"onSpeechError"],[28,24,19,27],[28,29,19,33],[28,30,19,35],[28,31,19,36],[29,8,20,12,"onSpeechResults"],[29,23,20,27],[29,25,20,29,"onSpeechResults"],[29,26,20,29],[29,31,20,35],[29,32,20,37],[29,33,20,38],[30,8,21,12,"onSpeechPartialResults"],[30,30,21,34],[30,32,21,36,"onSpeechPartialResults"],[30,33,21,36],[30,38,21,42],[30,39,21,44],[30,40,21,45],[31,8,22,12,"onSpeechVolumeChanged"],[31,29,22,33],[31,31,22,35,"onSpeechVolumeChanged"],[31,32,22,35],[31,37,22,41],[31,38,22,43],[32,6,23,8],[32,7,23,9],[33,4,24,4],[34,4,24,5],[34,11,24,5,"_createClass"],[34,23,24,5],[34,24,24,5,"RCTVoice"],[34,32,24,5],[35,6,24,5,"key"],[35,9,24,5],[36,6,24,5,"value"],[36,11,24,5],[36,13,25,4],[36,22,25,4,"removeAllListeners"],[36,40,25,22,"removeAllListeners"],[36,41,25,22],[36,43,25,25],[37,8,26,8,"Voice"],[37,13,26,13],[37,14,26,14,"onSpeechStart"],[37,27,26,27],[37,30,26,30,"undefined"],[37,39,26,39],[38,8,27,8,"Voice"],[38,13,27,13],[38,14,27,14,"onSpeechRecognized"],[38,32,27,32],[38,35,27,35,"undefined"],[38,44,27,44],[39,8,28,8,"Voice"],[39,13,28,13],[39,14,28,14,"onSpeechEnd"],[39,25,28,25],[39,28,28,28,"undefined"],[39,37,28,37],[40,8,29,8,"Voice"],[40,13,29,13],[40,14,29,14,"onSpeechError"],[40,27,29,27],[40,30,29,30,"undefined"],[40,39,29,39],[41,8,30,8,"Voice"],[41,13,30,13],[41,14,30,14,"onSpeechResults"],[41,29,30,29],[41,32,30,32,"undefined"],[41,41,30,41],[42,8,31,8,"Voice"],[42,13,31,13],[42,14,31,14,"onSpeechPartialResults"],[42,36,31,36],[42,39,31,39,"undefined"],[42,48,31,48],[43,8,32,8,"Voice"],[43,13,32,13],[43,14,32,14,"onSpeechVolumeChanged"],[43,35,32,35],[43,38,32,38,"undefined"],[43,47,32,47],[44,6,33,4],[45,4,33,5],[46,6,33,5,"key"],[46,9,33,5],[47,6,33,5,"value"],[47,11,33,5],[47,13,34,4],[47,22,34,4,"destroy"],[47,29,34,11,"destroy"],[47,30,34,11],[47,32,34,14],[48,8,35,8],[48,12,35,12],[48,13,35,13],[48,17,35,17],[48,18,35,18,"_loaded"],[48,25,35,25],[48,29,35,29],[48,30,35,30],[48,34,35,34],[48,35,35,35,"_listeners"],[48,45,35,45],[48,47,35,47],[49,10,36,12],[49,17,36,19,"Promise"],[49,24,36,26],[49,25,36,27,"resolve"],[49,32,36,34],[49,33,36,35],[49,34,36,36],[50,8,37,8],[51,8,38,8],[51,15,38,15],[51,19,38,19,"Promise"],[51,26,38,26],[51,27,38,27],[51,28,38,28,"resolve"],[51,35,38,35],[51,37,38,37,"reject"],[51,43,38,43],[51,48,38,48],[52,10,39,12,"Voice"],[52,15,39,17],[52,16,39,18,"destroySpeech"],[52,29,39,31],[52,30,39,33,"error"],[52,35,39,38],[52,39,39,43],[53,12,40,16],[53,16,40,20,"error"],[53,21,40,25],[53,23,40,27],[54,14,41,20,"reject"],[54,20,41,26],[54,21,41,27],[54,25,41,31,"Error"],[54,30,41,36],[54,31,41,37,"error"],[54,36,41,42],[54,37,41,43],[54,38,41,44],[55,12,42,16],[55,13,42,17],[55,19,43,21],[56,14,44,20],[56,18,44,24],[56,22,44,28],[56,23,44,29,"_listeners"],[56,33,44,39],[56,35,44,41],[57,16,45,24],[57,20,45,28],[57,21,45,29,"_listeners"],[57,31,45,39],[57,32,45,40,"map"],[57,35,45,43],[57,36,45,44,"listener"],[57,44,45,52],[57,48,45,56,"listener"],[57,56,45,64],[57,57,45,65,"remove"],[57,63,45,71],[57,64,45,72],[57,65,45,73],[57,66,45,74],[58,16,46,24],[58,20,46,28],[58,21,46,29,"_listeners"],[58,31,46,39],[58,34,46,42],[58,38,46,46],[59,14,47,20],[60,14,48,20,"resolve"],[60,21,48,27],[60,22,48,28],[60,23,48,29],[61,12,49,16],[62,10,50,12],[62,11,50,13],[62,12,50,14],[63,8,51,8],[63,9,51,9],[63,10,51,10],[64,6,52,4],[65,4,52,5],[66,6,52,5,"key"],[66,9,52,5],[67,6,52,5,"value"],[67,11,52,5],[67,13,53,4],[67,22,53,4,"start"],[67,27,53,9,"start"],[67,28,53,10,"locale"],[67,34,53,16],[67,36,53,32],[68,8,53,32],[68,12,53,18,"options"],[68,19,53,25],[68,22,53,25,"arguments"],[68,31,53,25],[68,32,53,25,"length"],[68,38,53,25],[68,46,53,25,"arguments"],[68,55,53,25],[68,63,53,25,"undefined"],[68,72,53,25],[68,75,53,25,"arguments"],[68,84,53,25],[68,90,53,28],[68,91,53,29],[68,92,53,30],[69,8,54,8],[69,12,54,12],[69,13,54,13],[69,17,54,17],[69,18,54,18,"_loaded"],[69,25,54,25],[69,29,54,29],[69,30,54,30],[69,34,54,34],[69,35,54,35,"_listeners"],[69,45,54,45],[69,49,54,49,"voiceEmitter"],[69,61,54,61],[69,66,54,66],[69,70,54,70],[69,72,54,72],[70,10,55,12],[70,14,55,16],[70,15,55,17,"_listeners"],[70,25,55,27],[70,28,55,30,"Object"],[70,34,55,36],[70,35,55,37,"keys"],[70,39,55,41],[70,40,55,42],[70,44,55,46],[70,45,55,47,"_events"],[70,52,55,54],[70,53,55,55],[70,54,55,56,"map"],[70,57,55,59],[70,58,55,61,"key"],[70,61,55,64],[70,65,55,69,"voiceEmitter"],[70,77,55,81],[70,78,55,82,"addListener"],[70,89,55,93],[70,90,55,94,"key"],[70,93,55,97],[70,95,55,99],[70,99,55,103],[70,100,55,104,"_events"],[70,107,55,111],[70,108,55,112,"key"],[70,111,55,115],[70,112,55,116],[70,113,55,117],[70,114,55,118],[71,8,56,8],[72,8,57,8],[72,15,57,15],[72,19,57,19,"Promise"],[72,26,57,26],[72,27,57,27],[72,28,57,28,"resolve"],[72,35,57,35],[72,37,57,37,"reject"],[72,43,57,43],[72,48,57,48],[73,10,58,12],[73,14,58,18,"callback"],[73,22,58,26],[73,25,58,30,"error"],[73,30,58,35],[73,34,58,40],[74,12,59,16],[74,16,59,20,"error"],[74,21,59,25],[74,23,59,27],[75,14,60,20,"reject"],[75,20,60,26],[75,21,60,27],[75,25,60,31,"Error"],[75,30,60,36],[75,31,60,37,"error"],[75,36,60,42],[75,37,60,43],[75,38,60,44],[76,12,61,16],[76,13,61,17],[76,19,62,21],[77,14,63,20,"resolve"],[77,21,63,27],[77,22,63,28],[77,23,63,29],[78,12,64,16],[79,10,65,12],[79,11,65,13],[80,10,66,12],[80,14,66,16,"react_native_1"],[80,28,66,30],[80,29,66,31,"Platform"],[80,37,66,39],[80,38,66,40,"OS"],[80,40,66,42],[80,45,66,47],[80,54,66,56],[80,56,66,58],[81,12,67,16,"Voice"],[81,17,67,21],[81,18,67,22,"startSpeech"],[81,29,67,33],[81,30,67,34,"locale"],[81,36,67,40],[81,38,67,42,"Object"],[81,44,67,48],[81,45,67,49,"assign"],[81,51,67,55],[81,52,67,56],[82,14,68,20,"EXTRA_LANGUAGE_MODEL"],[82,34,68,40],[82,36,68,42],[82,62,68,68],[83,14,69,20,"EXTRA_MAX_RESULTS"],[83,31,69,37],[83,33,69,39],[83,34,69,40],[84,14,70,20,"EXTRA_PARTIAL_RESULTS"],[84,35,70,41],[84,37,70,43],[84,41,70,47],[85,14,71,20,"REQUEST_PERMISSIONS_AUTO"],[85,38,71,44],[85,40,71,46],[86,12,72,16],[86,13,72,17],[86,15,72,19,"options"],[86,22,72,26],[86,23,72,27],[86,25,72,29,"callback"],[86,33,72,37],[86,34,72,38],[87,10,73,12],[87,11,73,13],[87,17,74,17],[88,12,75,16,"Voice"],[88,17,75,21],[88,18,75,22,"startSpeech"],[88,29,75,33],[88,30,75,34,"locale"],[88,36,75,40],[88,38,75,42,"callback"],[88,46,75,50],[88,47,75,51],[89,10,76,12],[90,8,77,8],[90,9,77,9],[90,10,77,10],[91,6,78,4],[92,4,78,5],[93,6,78,5,"key"],[93,9,78,5],[94,6,78,5,"value"],[94,11,78,5],[94,13,79,4],[94,22,79,4,"stop"],[94,26,79,8,"stop"],[94,27,79,8],[94,29,79,11],[95,8,80,8],[95,12,80,12],[95,13,80,13],[95,17,80,17],[95,18,80,18,"_loaded"],[95,25,80,25],[95,29,80,29],[95,30,80,30],[95,34,80,34],[95,35,80,35,"_listeners"],[95,45,80,45],[95,47,80,47],[96,10,81,12],[96,17,81,19,"Promise"],[96,24,81,26],[96,25,81,27,"resolve"],[96,32,81,34],[96,33,81,35],[96,34,81,36],[97,8,82,8],[98,8,83,8],[98,15,83,15],[98,19,83,19,"Promise"],[98,26,83,26],[98,27,83,27],[98,28,83,28,"resolve"],[98,35,83,35],[98,37,83,37,"reject"],[98,43,83,43],[98,48,83,48],[99,10,84,12,"Voice"],[99,15,84,17],[99,16,84,18,"stopSpeech"],[99,26,84,28],[99,27,84,29,"error"],[99,32,84,34],[99,36,84,38],[100,12,85,16],[100,16,85,20,"error"],[100,21,85,25],[100,23,85,27],[101,14,86,20,"reject"],[101,20,86,26],[101,21,86,27],[101,25,86,31,"Error"],[101,30,86,36],[101,31,86,37,"error"],[101,36,86,42],[101,37,86,43],[101,38,86,44],[102,12,87,16],[102,13,87,17],[102,19,88,21],[103,14,89,20,"resolve"],[103,21,89,27],[103,22,89,28],[103,23,89,29],[104,12,90,16],[105,10,91,12],[105,11,91,13],[105,12,91,14],[106,8,92,8],[106,9,92,9],[106,10,92,10],[107,6,93,4],[108,4,93,5],[109,6,93,5,"key"],[109,9,93,5],[110,6,93,5,"value"],[110,11,93,5],[110,13,94,4],[110,22,94,4,"cancel"],[110,28,94,10,"cancel"],[110,29,94,10],[110,31,94,13],[111,8,95,8],[111,12,95,12],[111,13,95,13],[111,17,95,17],[111,18,95,18,"_loaded"],[111,25,95,25],[111,29,95,29],[111,30,95,30],[111,34,95,34],[111,35,95,35,"_listeners"],[111,45,95,45],[111,47,95,47],[112,10,96,12],[112,17,96,19,"Promise"],[112,24,96,26],[112,25,96,27,"resolve"],[112,32,96,34],[112,33,96,35],[112,34,96,36],[113,8,97,8],[114,8,98,8],[114,15,98,15],[114,19,98,19,"Promise"],[114,26,98,26],[114,27,98,27],[114,28,98,28,"resolve"],[114,35,98,35],[114,37,98,37,"reject"],[114,43,98,43],[114,48,98,48],[115,10,99,12,"Voice"],[115,15,99,17],[115,16,99,18,"cancelSpeech"],[115,28,99,30],[115,29,99,31,"error"],[115,34,99,36],[115,38,99,40],[116,12,100,16],[116,16,100,20,"error"],[116,21,100,25],[116,23,100,27],[117,14,101,20,"reject"],[117,20,101,26],[117,21,101,27],[117,25,101,31,"Error"],[117,30,101,36],[117,31,101,37,"error"],[117,36,101,42],[117,37,101,43],[117,38,101,44],[118,12,102,16],[118,13,102,17],[118,19,103,21],[119,14,104,20,"resolve"],[119,21,104,27],[119,22,104,28],[119,23,104,29],[120,12,105,16],[121,10,106,12],[121,11,106,13],[121,12,106,14],[122,8,107,8],[122,9,107,9],[122,10,107,10],[123,6,108,4],[124,4,108,5],[125,6,108,5,"key"],[125,9,108,5],[126,6,108,5,"value"],[126,11,108,5],[126,13,109,4],[126,22,109,4,"isAvailable"],[126,33,109,15,"isAvailable"],[126,34,109,15],[126,36,109,18],[127,8,110,8],[127,15,110,15],[127,19,110,19,"Promise"],[127,26,110,26],[127,27,110,27],[127,28,110,28,"resolve"],[127,35,110,35],[127,37,110,37,"reject"],[127,43,110,43],[127,48,110,48],[128,10,111,12,"Voice"],[128,15,111,17],[128,16,111,18,"isSpeechAvailable"],[128,33,111,35],[128,34,111,36],[128,35,111,37,"isAvailable"],[128,46,111,48],[128,48,111,50,"error"],[128,53,111,55],[128,58,111,60],[129,12,112,16],[129,16,112,20,"error"],[129,21,112,25],[129,23,112,27],[130,14,113,20,"reject"],[130,20,113,26],[130,21,113,27],[130,25,113,31,"Error"],[130,30,113,36],[130,31,113,37,"error"],[130,36,113,42],[130,37,113,43],[130,38,113,44],[131,12,114,16],[131,13,114,17],[131,19,115,21],[132,14,116,20,"resolve"],[132,21,116,27],[132,22,116,28,"isAvailable"],[132,33,116,39],[132,34,116,40],[133,12,117,16],[134,10,118,12],[134,11,118,13],[134,12,118,14],[135,8,119,8],[135,9,119,9],[135,10,119,10],[136,6,120,4],[137,6,121,4],[138,0,122,0],[139,0,123,0],[140,4,121,4],[141,6,121,4,"key"],[141,9,121,4],[142,6,121,4,"value"],[142,11,121,4],[142,13,124,4],[142,22,124,4,"getSpeechRecognitionServices"],[142,50,124,32,"getSpeechRecognitionServices"],[142,51,124,32],[142,53,124,35],[143,8,125,8],[143,12,125,12,"react_native_1"],[143,26,125,26],[143,27,125,27,"Platform"],[143,35,125,35],[143,36,125,36,"OS"],[143,38,125,38],[143,43,125,43],[143,52,125,52],[143,54,125,54],[144,10,126,12,"invariant_1"],[144,21,126,23],[144,22,126,24,"default"],[144,29,126,31],[144,30,126,32,"Voice"],[144,35,126,37],[144,37,126,39],[144,101,126,103],[144,102,126,104],[145,10,127,12],[146,8,128,8],[147,8,129,8],[147,15,129,15,"Voice"],[147,20,129,20],[147,21,129,21,"getSpeechRecognitionServices"],[147,49,129,49],[147,50,129,50],[147,51,129,51],[148,6,130,4],[149,4,130,5],[150,6,130,5,"key"],[150,9,130,5],[151,6,130,5,"value"],[151,11,130,5],[151,13,131,4],[151,22,131,4,"isRecognizing"],[151,35,131,17,"isRecognizing"],[151,36,131,17],[151,38,131,20],[152,8,132,8],[152,15,132,15],[152,19,132,19,"Promise"],[152,26,132,26],[152,27,132,27,"resolve"],[152,34,132,34],[152,38,132,38],[153,10,133,12,"Voice"],[153,15,133,17],[153,16,133,18,"isRecognizing"],[153,29,133,31],[153,30,133,33,"isRecognizing"],[153,43,133,46],[153,47,133,51,"resolve"],[153,54,133,58],[153,55,133,59,"isRecognizing"],[153,68,133,72],[153,69,133,73],[153,70,133,74],[154,8,134,8],[154,9,134,9],[154,10,134,10],[155,6,135,4],[156,4,135,5],[157,6,135,5,"key"],[157,9,135,5],[158,6,135,5,"set"],[158,9,135,5],[158,11,136,4],[158,20,136,4,"set"],[158,21,136,22,"fn"],[158,23,136,24],[158,25,136,26],[159,8,137,8],[159,12,137,12],[159,13,137,13,"_events"],[159,20,137,20],[159,21,137,21,"onSpeechStart"],[159,34,137,34],[159,37,137,37,"fn"],[159,39,137,39],[160,6,138,4],[161,4,138,5],[162,6,138,5,"key"],[162,9,138,5],[163,6,138,5,"set"],[163,9,138,5],[163,11,139,4],[163,20,139,4,"set"],[163,21,139,27,"fn"],[163,23,139,29],[163,25,139,31],[164,8,140,8],[164,12,140,12],[164,13,140,13,"_events"],[164,20,140,20],[164,21,140,21,"onSpeechRecognized"],[164,39,140,39],[164,42,140,42,"fn"],[164,44,140,44],[165,6,141,4],[166,4,141,5],[167,6,141,5,"key"],[167,9,141,5],[168,6,141,5,"set"],[168,9,141,5],[168,11,142,4],[168,20,142,4,"set"],[168,21,142,20,"fn"],[168,23,142,22],[168,25,142,24],[169,8,143,8],[169,12,143,12],[169,13,143,13,"_events"],[169,20,143,20],[169,21,143,21,"onSpeechEnd"],[169,32,143,32],[169,35,143,35,"fn"],[169,37,143,37],[170,6,144,4],[171,4,144,5],[172,6,144,5,"key"],[172,9,144,5],[173,6,144,5,"set"],[173,9,144,5],[173,11,145,4],[173,20,145,4,"set"],[173,21,145,22,"fn"],[173,23,145,24],[173,25,145,26],[174,8,146,8],[174,12,146,12],[174,13,146,13,"_events"],[174,20,146,20],[174,21,146,21,"onSpeechError"],[174,34,146,34],[174,37,146,37,"fn"],[174,39,146,39],[175,6,147,4],[176,4,147,5],[177,6,147,5,"key"],[177,9,147,5],[178,6,147,5,"set"],[178,9,147,5],[178,11,148,4],[178,20,148,4,"set"],[178,21,148,24,"fn"],[178,23,148,26],[178,25,148,28],[179,8,149,8],[179,12,149,12],[179,13,149,13,"_events"],[179,20,149,20],[179,21,149,21,"onSpeechResults"],[179,36,149,36],[179,39,149,39,"fn"],[179,41,149,41],[180,6,150,4],[181,4,150,5],[182,6,150,5,"key"],[182,9,150,5],[183,6,150,5,"set"],[183,9,150,5],[183,11,151,4],[183,20,151,4,"set"],[183,21,151,31,"fn"],[183,23,151,33],[183,25,151,35],[184,8,152,8],[184,12,152,12],[184,13,152,13,"_events"],[184,20,152,20],[184,21,152,21,"onSpeechPartialResults"],[184,43,152,43],[184,46,152,46,"fn"],[184,48,152,48],[185,6,153,4],[186,4,153,5],[187,6,153,5,"key"],[187,9,153,5],[188,6,153,5,"set"],[188,9,153,5],[188,11,154,4],[188,20,154,4,"set"],[188,21,154,30,"fn"],[188,23,154,32],[188,25,154,34],[189,8,155,8],[189,12,155,12],[189,13,155,13,"_events"],[189,20,155,20],[189,21,155,21,"onSpeechVolumeChanged"],[189,42,155,42],[189,45,155,45,"fn"],[189,47,155,47],[190,6,156,4],[191,4,156,5],[192,2,156,5],[193,2,158,0,"exports"],[193,9,158,7],[193,10,158,8,"default"],[193,17,158,15],[193,20,158,18],[193,24,158,22,"RCTVoice"],[193,32,158,30],[193,33,158,31],[193,34,158,32],[194,0,158,33],[194,3]],"functionMap":{"names":["<global>","<anonymous>","RCTVoice","RCTVoice#constructor","_events.onSpeechStart","_events.onSpeechRecognized","_events.onSpeechEnd","_events.onSpeechError","_events.onSpeechResults","_events.onSpeechPartialResults","_events.onSpeechVolumeChanged","RCTVoice#removeAllListeners","RCTVoice#destroy","Promise$argument_0","Voice.destroySpeech$argument_0","_listeners.map$argument_0","RCTVoice#start","Object.keys.map$argument_0","callback","RCTVoice#stop","Voice.stopSpeech$argument_0","RCTVoice#cancel","Voice.cancelSpeech$argument_0","RCTVoice#isAvailable","Voice.isSpeechAvailable$argument_0","RCTVoice#getSpeechRecognitionServices","RCTVoice#isRecognizing","Voice.isRecognizing$argument_0","RCTVoice#set__onSpeechStart","RCTVoice#set__onSpeechRecognized","RCTVoice#set__onSpeechEnd","RCTVoice#set__onSpeechError","RCTVoice#set__onSpeechResults","RCTVoice#set__onSpeechPartialResults","RCTVoice#set__onSpeechVolumeChanged"],"mappings":"AAA;wDCC;CDE;AEO;ICC;2BCI,SD;gCEC,SF;yBGC,SH;2BIC,SJ;6BKC,SL;oCMC,SN;mCOC,SP;KDE;ISC;KTQ;IUC;2BCI;gCCC;4CCM,6BD;aDK;SDC;KVC;IcC;4DCE,yDD;2BHE;6BKC;aLO;SGY;KdC;IiBC;2BNI;6BOC;aPO;SMC;KjBC;ImBC;2BRI;+BSC;aTO;SQC;KnBC;IqBC;2BVC;oCWC;aXO;SUC;KrBC;IuBI;KvBM;IwBC;2BbC;gCcC,yCd;SaC;KxBC;I0BC;K1BE;I2BC;K3BE;I4BC;K5BE;I6BC;K7BE;I8BC;K9BE;I+BC;K/BE;IgCC;KhCE;CFC"},"hasCjsExports":true},"type":"js/module"}]}