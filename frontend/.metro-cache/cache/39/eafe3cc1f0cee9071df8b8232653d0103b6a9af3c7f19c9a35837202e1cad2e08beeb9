{"dependencies":[{"name":"react-native-web/dist/index","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"55efhPHw3gz2FoQtoN2yI1VuhbM=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":36,"index":300},"end":{"line":7,"column":56,"index":320}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const react_native_1 = require(_dependencyMap[0], \"react-native-web/dist/index\");\n  const invariant_1 = __importDefault(require(_dependencyMap[1], \"invariant\"));\n  const Voice = react_native_1.NativeModules.Voice;\n  // NativeEventEmitter is only availabe on React Native platforms, so this conditional is used to avoid import conflicts in the browser/server\n  const voiceEmitter = react_native_1.Platform.OS !== 'web' ? new react_native_1.NativeEventEmitter(Voice) : null;\n  class RCTVoice {\n    constructor() {\n      this._loaded = false;\n      this._listeners = null;\n      this._events = {\n        onSpeechStart: () => {},\n        onSpeechRecognized: () => {},\n        onSpeechEnd: () => {},\n        onSpeechError: () => {},\n        onSpeechResults: () => {},\n        onSpeechPartialResults: () => {},\n        onSpeechVolumeChanged: () => {}\n      };\n    }\n    removeAllListeners() {\n      Voice.onSpeechStart = undefined;\n      Voice.onSpeechRecognized = undefined;\n      Voice.onSpeechEnd = undefined;\n      Voice.onSpeechError = undefined;\n      Voice.onSpeechResults = undefined;\n      Voice.onSpeechPartialResults = undefined;\n      Voice.onSpeechVolumeChanged = undefined;\n    }\n    destroy() {\n      if (!this._loaded && !this._listeners) {\n        return Promise.resolve();\n      }\n      return new Promise((resolve, reject) => {\n        Voice.destroySpeech(error => {\n          if (error) {\n            reject(new Error(error));\n          } else {\n            if (this._listeners) {\n              this._listeners.map(listener => listener.remove());\n              this._listeners = null;\n            }\n            resolve();\n          }\n        });\n      });\n    }\n    start(locale, options = {}) {\n      if (!this._loaded && !this._listeners && voiceEmitter !== null) {\n        this._listeners = Object.keys(this._events).map(key => voiceEmitter.addListener(key, this._events[key]));\n      }\n      return new Promise((resolve, reject) => {\n        const callback = error => {\n          if (error) {\n            reject(new Error(error));\n          } else {\n            resolve();\n          }\n        };\n        if (react_native_1.Platform.OS === 'android') {\n          Voice.startSpeech(locale, Object.assign({\n            EXTRA_LANGUAGE_MODEL: 'LANGUAGE_MODEL_FREE_FORM',\n            EXTRA_MAX_RESULTS: 5,\n            EXTRA_PARTIAL_RESULTS: true,\n            REQUEST_PERMISSIONS_AUTO: true\n          }, options), callback);\n        } else {\n          Voice.startSpeech(locale, callback);\n        }\n      });\n    }\n    stop() {\n      if (!this._loaded && !this._listeners) {\n        return Promise.resolve();\n      }\n      return new Promise((resolve, reject) => {\n        Voice.stopSpeech(error => {\n          if (error) {\n            reject(new Error(error));\n          } else {\n            resolve();\n          }\n        });\n      });\n    }\n    cancel() {\n      if (!this._loaded && !this._listeners) {\n        return Promise.resolve();\n      }\n      return new Promise((resolve, reject) => {\n        Voice.cancelSpeech(error => {\n          if (error) {\n            reject(new Error(error));\n          } else {\n            resolve();\n          }\n        });\n      });\n    }\n    isAvailable() {\n      return new Promise((resolve, reject) => {\n        Voice.isSpeechAvailable((isAvailable, error) => {\n          if (error) {\n            reject(new Error(error));\n          } else {\n            resolve(isAvailable);\n          }\n        });\n      });\n    }\n    /**\n     * (Android) Get a list of the speech recognition engines available on the device\n     * */\n    getSpeechRecognitionServices() {\n      if (react_native_1.Platform.OS !== 'android') {\n        invariant_1.default(Voice, 'Speech recognition services can be queried for only on Android');\n        return;\n      }\n      return Voice.getSpeechRecognitionServices();\n    }\n    isRecognizing() {\n      return new Promise(resolve => {\n        Voice.isRecognizing(isRecognizing => resolve(isRecognizing));\n      });\n    }\n    set onSpeechStart(fn) {\n      this._events.onSpeechStart = fn;\n    }\n    set onSpeechRecognized(fn) {\n      this._events.onSpeechRecognized = fn;\n    }\n    set onSpeechEnd(fn) {\n      this._events.onSpeechEnd = fn;\n    }\n    set onSpeechError(fn) {\n      this._events.onSpeechError = fn;\n    }\n    set onSpeechResults(fn) {\n      this._events.onSpeechResults = fn;\n    }\n    set onSpeechPartialResults(fn) {\n      this._events.onSpeechPartialResults = fn;\n    }\n    set onSpeechVolumeChanged(fn) {\n      this._events.onSpeechVolumeChanged = fn;\n    }\n  }\n  exports.default = new RCTVoice();\n});","lineCount":159,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importDefault"],[4,21,2,19],[4,24,2,23],[4,28,2,27],[4,32,2,31],[4,36,2,35],[4,37,2,36,"__importDefault"],[4,52,2,51],[4,56,2,56],[4,66,2,66,"mod"],[4,69,2,69],[4,71,2,71],[5,4,3,4],[5,11,3,12,"mod"],[5,14,3,15],[5,18,3,19,"mod"],[5,21,3,22],[5,22,3,23,"__esModule"],[5,32,3,33],[5,35,3,37,"mod"],[5,38,3,40],[5,41,3,43],[6,6,3,45],[6,15,3,54],[6,17,3,56,"mod"],[7,4,3,60],[7,5,3,61],[8,2,4,0],[8,3,4,1],[9,2,5,0,"Object"],[9,8,5,6],[9,9,5,7,"defineProperty"],[9,23,5,21],[9,24,5,22,"exports"],[9,31,5,29],[9,33,5,31],[9,45,5,43],[9,47,5,45],[10,4,5,47,"value"],[10,9,5,52],[10,11,5,54],[11,2,5,59],[11,3,5,60],[11,4,5,61],[12,2,5,62],[12,8,5,62,"react_native_1"],[12,22,5,62],[12,25,5,62,"require"],[12,32,5,62],[12,33,5,62,"_dependencyMap"],[12,47,5,62],[13,2,7,0],[13,8,7,6,"invariant_1"],[13,19,7,17],[13,22,7,20,"__importDefault"],[13,37,7,35],[13,38,7,36,"require"],[13,45,7,43],[13,46,7,43,"_dependencyMap"],[13,60,7,43],[13,76,7,55],[13,77,7,56],[13,78,7,57],[14,2,8,0],[14,8,8,6,"Voice"],[14,13,8,11],[14,16,8,14,"react_native_1"],[14,30,8,28],[14,31,8,29,"NativeModules"],[14,44,8,42],[14,45,8,43,"Voice"],[14,50,8,48],[15,2,9,0],[16,2,10,0],[16,8,10,6,"voiceEmitter"],[16,20,10,18],[16,23,10,21,"react_native_1"],[16,37,10,35],[16,38,10,36,"Platform"],[16,46,10,44],[16,47,10,45,"OS"],[16,49,10,47],[16,54,10,52],[16,59,10,57],[16,62,10,60],[16,66,10,64,"react_native_1"],[16,80,10,78],[16,81,10,79,"NativeEventEmitter"],[16,99,10,97],[16,100,10,98,"Voice"],[16,105,10,103],[16,106,10,104],[16,109,10,107],[16,113,10,111],[17,2,11,0],[17,8,11,6,"RCTVoice"],[17,16,11,14],[17,17,11,15],[18,4,12,4,"constructor"],[18,15,12,15,"constructor"],[18,16,12,15],[18,18,12,18],[19,6,13,8],[19,10,13,12],[19,11,13,13,"_loaded"],[19,18,13,20],[19,21,13,23],[19,26,13,28],[20,6,14,8],[20,10,14,12],[20,11,14,13,"_listeners"],[20,21,14,23],[20,24,14,26],[20,28,14,30],[21,6,15,8],[21,10,15,12],[21,11,15,13,"_events"],[21,18,15,20],[21,21,15,23],[22,8,16,12,"onSpeechStart"],[22,21,16,25],[22,23,16,27,"onSpeechStart"],[22,24,16,27],[22,29,16,33],[22,30,16,35],[22,31,16,36],[23,8,17,12,"onSpeechRecognized"],[23,26,17,30],[23,28,17,32,"onSpeechRecognized"],[23,29,17,32],[23,34,17,38],[23,35,17,40],[23,36,17,41],[24,8,18,12,"onSpeechEnd"],[24,19,18,23],[24,21,18,25,"onSpeechEnd"],[24,22,18,25],[24,27,18,31],[24,28,18,33],[24,29,18,34],[25,8,19,12,"onSpeechError"],[25,21,19,25],[25,23,19,27,"onSpeechError"],[25,24,19,27],[25,29,19,33],[25,30,19,35],[25,31,19,36],[26,8,20,12,"onSpeechResults"],[26,23,20,27],[26,25,20,29,"onSpeechResults"],[26,26,20,29],[26,31,20,35],[26,32,20,37],[26,33,20,38],[27,8,21,12,"onSpeechPartialResults"],[27,30,21,34],[27,32,21,36,"onSpeechPartialResults"],[27,33,21,36],[27,38,21,42],[27,39,21,44],[27,40,21,45],[28,8,22,12,"onSpeechVolumeChanged"],[28,29,22,33],[28,31,22,35,"onSpeechVolumeChanged"],[28,32,22,35],[28,37,22,41],[28,38,22,43],[29,6,23,8],[29,7,23,9],[30,4,24,4],[31,4,25,4,"removeAllListeners"],[31,22,25,22,"removeAllListeners"],[31,23,25,22],[31,25,25,25],[32,6,26,8,"Voice"],[32,11,26,13],[32,12,26,14,"onSpeechStart"],[32,25,26,27],[32,28,26,30,"undefined"],[32,37,26,39],[33,6,27,8,"Voice"],[33,11,27,13],[33,12,27,14,"onSpeechRecognized"],[33,30,27,32],[33,33,27,35,"undefined"],[33,42,27,44],[34,6,28,8,"Voice"],[34,11,28,13],[34,12,28,14,"onSpeechEnd"],[34,23,28,25],[34,26,28,28,"undefined"],[34,35,28,37],[35,6,29,8,"Voice"],[35,11,29,13],[35,12,29,14,"onSpeechError"],[35,25,29,27],[35,28,29,30,"undefined"],[35,37,29,39],[36,6,30,8,"Voice"],[36,11,30,13],[36,12,30,14,"onSpeechResults"],[36,27,30,29],[36,30,30,32,"undefined"],[36,39,30,41],[37,6,31,8,"Voice"],[37,11,31,13],[37,12,31,14,"onSpeechPartialResults"],[37,34,31,36],[37,37,31,39,"undefined"],[37,46,31,48],[38,6,32,8,"Voice"],[38,11,32,13],[38,12,32,14,"onSpeechVolumeChanged"],[38,33,32,35],[38,36,32,38,"undefined"],[38,45,32,47],[39,4,33,4],[40,4,34,4,"destroy"],[40,11,34,11,"destroy"],[40,12,34,11],[40,14,34,14],[41,6,35,8],[41,10,35,12],[41,11,35,13],[41,15,35,17],[41,16,35,18,"_loaded"],[41,23,35,25],[41,27,35,29],[41,28,35,30],[41,32,35,34],[41,33,35,35,"_listeners"],[41,43,35,45],[41,45,35,47],[42,8,36,12],[42,15,36,19,"Promise"],[42,22,36,26],[42,23,36,27,"resolve"],[42,30,36,34],[42,31,36,35],[42,32,36,36],[43,6,37,8],[44,6,38,8],[44,13,38,15],[44,17,38,19,"Promise"],[44,24,38,26],[44,25,38,27],[44,26,38,28,"resolve"],[44,33,38,35],[44,35,38,37,"reject"],[44,41,38,43],[44,46,38,48],[45,8,39,12,"Voice"],[45,13,39,17],[45,14,39,18,"destroySpeech"],[45,27,39,31],[45,28,39,33,"error"],[45,33,39,38],[45,37,39,43],[46,10,40,16],[46,14,40,20,"error"],[46,19,40,25],[46,21,40,27],[47,12,41,20,"reject"],[47,18,41,26],[47,19,41,27],[47,23,41,31,"Error"],[47,28,41,36],[47,29,41,37,"error"],[47,34,41,42],[47,35,41,43],[47,36,41,44],[48,10,42,16],[48,11,42,17],[48,17,43,21],[49,12,44,20],[49,16,44,24],[49,20,44,28],[49,21,44,29,"_listeners"],[49,31,44,39],[49,33,44,41],[50,14,45,24],[50,18,45,28],[50,19,45,29,"_listeners"],[50,29,45,39],[50,30,45,40,"map"],[50,33,45,43],[50,34,45,44,"listener"],[50,42,45,52],[50,46,45,56,"listener"],[50,54,45,64],[50,55,45,65,"remove"],[50,61,45,71],[50,62,45,72],[50,63,45,73],[50,64,45,74],[51,14,46,24],[51,18,46,28],[51,19,46,29,"_listeners"],[51,29,46,39],[51,32,46,42],[51,36,46,46],[52,12,47,20],[53,12,48,20,"resolve"],[53,19,48,27],[53,20,48,28],[53,21,48,29],[54,10,49,16],[55,8,50,12],[55,9,50,13],[55,10,50,14],[56,6,51,8],[56,7,51,9],[56,8,51,10],[57,4,52,4],[58,4,53,4,"start"],[58,9,53,9,"start"],[58,10,53,10,"locale"],[58,16,53,16],[58,18,53,18,"options"],[58,25,53,25],[58,28,53,28],[58,29,53,29],[58,30,53,30],[58,32,53,32],[59,6,54,8],[59,10,54,12],[59,11,54,13],[59,15,54,17],[59,16,54,18,"_loaded"],[59,23,54,25],[59,27,54,29],[59,28,54,30],[59,32,54,34],[59,33,54,35,"_listeners"],[59,43,54,45],[59,47,54,49,"voiceEmitter"],[59,59,54,61],[59,64,54,66],[59,68,54,70],[59,70,54,72],[60,8,55,12],[60,12,55,16],[60,13,55,17,"_listeners"],[60,23,55,27],[60,26,55,30,"Object"],[60,32,55,36],[60,33,55,37,"keys"],[60,37,55,41],[60,38,55,42],[60,42,55,46],[60,43,55,47,"_events"],[60,50,55,54],[60,51,55,55],[60,52,55,56,"map"],[60,55,55,59],[60,56,55,61,"key"],[60,59,55,64],[60,63,55,69,"voiceEmitter"],[60,75,55,81],[60,76,55,82,"addListener"],[60,87,55,93],[60,88,55,94,"key"],[60,91,55,97],[60,93,55,99],[60,97,55,103],[60,98,55,104,"_events"],[60,105,55,111],[60,106,55,112,"key"],[60,109,55,115],[60,110,55,116],[60,111,55,117],[60,112,55,118],[61,6,56,8],[62,6,57,8],[62,13,57,15],[62,17,57,19,"Promise"],[62,24,57,26],[62,25,57,27],[62,26,57,28,"resolve"],[62,33,57,35],[62,35,57,37,"reject"],[62,41,57,43],[62,46,57,48],[63,8,58,12],[63,14,58,18,"callback"],[63,22,58,26],[63,25,58,30,"error"],[63,30,58,35],[63,34,58,40],[64,10,59,16],[64,14,59,20,"error"],[64,19,59,25],[64,21,59,27],[65,12,60,20,"reject"],[65,18,60,26],[65,19,60,27],[65,23,60,31,"Error"],[65,28,60,36],[65,29,60,37,"error"],[65,34,60,42],[65,35,60,43],[65,36,60,44],[66,10,61,16],[66,11,61,17],[66,17,62,21],[67,12,63,20,"resolve"],[67,19,63,27],[67,20,63,28],[67,21,63,29],[68,10,64,16],[69,8,65,12],[69,9,65,13],[70,8,66,12],[70,12,66,16,"react_native_1"],[70,26,66,30],[70,27,66,31,"Platform"],[70,35,66,39],[70,36,66,40,"OS"],[70,38,66,42],[70,43,66,47],[70,52,66,56],[70,54,66,58],[71,10,67,16,"Voice"],[71,15,67,21],[71,16,67,22,"startSpeech"],[71,27,67,33],[71,28,67,34,"locale"],[71,34,67,40],[71,36,67,42,"Object"],[71,42,67,48],[71,43,67,49,"assign"],[71,49,67,55],[71,50,67,56],[72,12,68,20,"EXTRA_LANGUAGE_MODEL"],[72,32,68,40],[72,34,68,42],[72,60,68,68],[73,12,69,20,"EXTRA_MAX_RESULTS"],[73,29,69,37],[73,31,69,39],[73,32,69,40],[74,12,70,20,"EXTRA_PARTIAL_RESULTS"],[74,33,70,41],[74,35,70,43],[74,39,70,47],[75,12,71,20,"REQUEST_PERMISSIONS_AUTO"],[75,36,71,44],[75,38,71,46],[76,10,72,16],[76,11,72,17],[76,13,72,19,"options"],[76,20,72,26],[76,21,72,27],[76,23,72,29,"callback"],[76,31,72,37],[76,32,72,38],[77,8,73,12],[77,9,73,13],[77,15,74,17],[78,10,75,16,"Voice"],[78,15,75,21],[78,16,75,22,"startSpeech"],[78,27,75,33],[78,28,75,34,"locale"],[78,34,75,40],[78,36,75,42,"callback"],[78,44,75,50],[78,45,75,51],[79,8,76,12],[80,6,77,8],[80,7,77,9],[80,8,77,10],[81,4,78,4],[82,4,79,4,"stop"],[82,8,79,8,"stop"],[82,9,79,8],[82,11,79,11],[83,6,80,8],[83,10,80,12],[83,11,80,13],[83,15,80,17],[83,16,80,18,"_loaded"],[83,23,80,25],[83,27,80,29],[83,28,80,30],[83,32,80,34],[83,33,80,35,"_listeners"],[83,43,80,45],[83,45,80,47],[84,8,81,12],[84,15,81,19,"Promise"],[84,22,81,26],[84,23,81,27,"resolve"],[84,30,81,34],[84,31,81,35],[84,32,81,36],[85,6,82,8],[86,6,83,8],[86,13,83,15],[86,17,83,19,"Promise"],[86,24,83,26],[86,25,83,27],[86,26,83,28,"resolve"],[86,33,83,35],[86,35,83,37,"reject"],[86,41,83,43],[86,46,83,48],[87,8,84,12,"Voice"],[87,13,84,17],[87,14,84,18,"stopSpeech"],[87,24,84,28],[87,25,84,29,"error"],[87,30,84,34],[87,34,84,38],[88,10,85,16],[88,14,85,20,"error"],[88,19,85,25],[88,21,85,27],[89,12,86,20,"reject"],[89,18,86,26],[89,19,86,27],[89,23,86,31,"Error"],[89,28,86,36],[89,29,86,37,"error"],[89,34,86,42],[89,35,86,43],[89,36,86,44],[90,10,87,16],[90,11,87,17],[90,17,88,21],[91,12,89,20,"resolve"],[91,19,89,27],[91,20,89,28],[91,21,89,29],[92,10,90,16],[93,8,91,12],[93,9,91,13],[93,10,91,14],[94,6,92,8],[94,7,92,9],[94,8,92,10],[95,4,93,4],[96,4,94,4,"cancel"],[96,10,94,10,"cancel"],[96,11,94,10],[96,13,94,13],[97,6,95,8],[97,10,95,12],[97,11,95,13],[97,15,95,17],[97,16,95,18,"_loaded"],[97,23,95,25],[97,27,95,29],[97,28,95,30],[97,32,95,34],[97,33,95,35,"_listeners"],[97,43,95,45],[97,45,95,47],[98,8,96,12],[98,15,96,19,"Promise"],[98,22,96,26],[98,23,96,27,"resolve"],[98,30,96,34],[98,31,96,35],[98,32,96,36],[99,6,97,8],[100,6,98,8],[100,13,98,15],[100,17,98,19,"Promise"],[100,24,98,26],[100,25,98,27],[100,26,98,28,"resolve"],[100,33,98,35],[100,35,98,37,"reject"],[100,41,98,43],[100,46,98,48],[101,8,99,12,"Voice"],[101,13,99,17],[101,14,99,18,"cancelSpeech"],[101,26,99,30],[101,27,99,31,"error"],[101,32,99,36],[101,36,99,40],[102,10,100,16],[102,14,100,20,"error"],[102,19,100,25],[102,21,100,27],[103,12,101,20,"reject"],[103,18,101,26],[103,19,101,27],[103,23,101,31,"Error"],[103,28,101,36],[103,29,101,37,"error"],[103,34,101,42],[103,35,101,43],[103,36,101,44],[104,10,102,16],[104,11,102,17],[104,17,103,21],[105,12,104,20,"resolve"],[105,19,104,27],[105,20,104,28],[105,21,104,29],[106,10,105,16],[107,8,106,12],[107,9,106,13],[107,10,106,14],[108,6,107,8],[108,7,107,9],[108,8,107,10],[109,4,108,4],[110,4,109,4,"isAvailable"],[110,15,109,15,"isAvailable"],[110,16,109,15],[110,18,109,18],[111,6,110,8],[111,13,110,15],[111,17,110,19,"Promise"],[111,24,110,26],[111,25,110,27],[111,26,110,28,"resolve"],[111,33,110,35],[111,35,110,37,"reject"],[111,41,110,43],[111,46,110,48],[112,8,111,12,"Voice"],[112,13,111,17],[112,14,111,18,"isSpeechAvailable"],[112,31,111,35],[112,32,111,36],[112,33,111,37,"isAvailable"],[112,44,111,48],[112,46,111,50,"error"],[112,51,111,55],[112,56,111,60],[113,10,112,16],[113,14,112,20,"error"],[113,19,112,25],[113,21,112,27],[114,12,113,20,"reject"],[114,18,113,26],[114,19,113,27],[114,23,113,31,"Error"],[114,28,113,36],[114,29,113,37,"error"],[114,34,113,42],[114,35,113,43],[114,36,113,44],[115,10,114,16],[115,11,114,17],[115,17,115,21],[116,12,116,20,"resolve"],[116,19,116,27],[116,20,116,28,"isAvailable"],[116,31,116,39],[116,32,116,40],[117,10,117,16],[118,8,118,12],[118,9,118,13],[118,10,118,14],[119,6,119,8],[119,7,119,9],[119,8,119,10],[120,4,120,4],[121,4,121,4],[122,0,122,0],[123,0,123,0],[124,4,124,4,"getSpeechRecognitionServices"],[124,32,124,32,"getSpeechRecognitionServices"],[124,33,124,32],[124,35,124,35],[125,6,125,8],[125,10,125,12,"react_native_1"],[125,24,125,26],[125,25,125,27,"Platform"],[125,33,125,35],[125,34,125,36,"OS"],[125,36,125,38],[125,41,125,43],[125,50,125,52],[125,52,125,54],[126,8,126,12,"invariant_1"],[126,19,126,23],[126,20,126,24,"default"],[126,27,126,31],[126,28,126,32,"Voice"],[126,33,126,37],[126,35,126,39],[126,99,126,103],[126,100,126,104],[127,8,127,12],[128,6,128,8],[129,6,129,8],[129,13,129,15,"Voice"],[129,18,129,20],[129,19,129,21,"getSpeechRecognitionServices"],[129,47,129,49],[129,48,129,50],[129,49,129,51],[130,4,130,4],[131,4,131,4,"isRecognizing"],[131,17,131,17,"isRecognizing"],[131,18,131,17],[131,20,131,20],[132,6,132,8],[132,13,132,15],[132,17,132,19,"Promise"],[132,24,132,26],[132,25,132,27,"resolve"],[132,32,132,34],[132,36,132,38],[133,8,133,12,"Voice"],[133,13,133,17],[133,14,133,18,"isRecognizing"],[133,27,133,31],[133,28,133,33,"isRecognizing"],[133,41,133,46],[133,45,133,51,"resolve"],[133,52,133,58],[133,53,133,59,"isRecognizing"],[133,66,133,72],[133,67,133,73],[133,68,133,74],[134,6,134,8],[134,7,134,9],[134,8,134,10],[135,4,135,4],[136,4,136,4],[136,8,136,8,"onSpeechStart"],[136,21,136,21,"onSpeechStart"],[136,22,136,22,"fn"],[136,24,136,24],[136,26,136,26],[137,6,137,8],[137,10,137,12],[137,11,137,13,"_events"],[137,18,137,20],[137,19,137,21,"onSpeechStart"],[137,32,137,34],[137,35,137,37,"fn"],[137,37,137,39],[138,4,138,4],[139,4,139,4],[139,8,139,8,"onSpeechRecognized"],[139,26,139,26,"onSpeechRecognized"],[139,27,139,27,"fn"],[139,29,139,29],[139,31,139,31],[140,6,140,8],[140,10,140,12],[140,11,140,13,"_events"],[140,18,140,20],[140,19,140,21,"onSpeechRecognized"],[140,37,140,39],[140,40,140,42,"fn"],[140,42,140,44],[141,4,141,4],[142,4,142,4],[142,8,142,8,"onSpeechEnd"],[142,19,142,19,"onSpeechEnd"],[142,20,142,20,"fn"],[142,22,142,22],[142,24,142,24],[143,6,143,8],[143,10,143,12],[143,11,143,13,"_events"],[143,18,143,20],[143,19,143,21,"onSpeechEnd"],[143,30,143,32],[143,33,143,35,"fn"],[143,35,143,37],[144,4,144,4],[145,4,145,4],[145,8,145,8,"onSpeechError"],[145,21,145,21,"onSpeechError"],[145,22,145,22,"fn"],[145,24,145,24],[145,26,145,26],[146,6,146,8],[146,10,146,12],[146,11,146,13,"_events"],[146,18,146,20],[146,19,146,21,"onSpeechError"],[146,32,146,34],[146,35,146,37,"fn"],[146,37,146,39],[147,4,147,4],[148,4,148,4],[148,8,148,8,"onSpeechResults"],[148,23,148,23,"onSpeechResults"],[148,24,148,24,"fn"],[148,26,148,26],[148,28,148,28],[149,6,149,8],[149,10,149,12],[149,11,149,13,"_events"],[149,18,149,20],[149,19,149,21,"onSpeechResults"],[149,34,149,36],[149,37,149,39,"fn"],[149,39,149,41],[150,4,150,4],[151,4,151,4],[151,8,151,8,"onSpeechPartialResults"],[151,30,151,30,"onSpeechPartialResults"],[151,31,151,31,"fn"],[151,33,151,33],[151,35,151,35],[152,6,152,8],[152,10,152,12],[152,11,152,13,"_events"],[152,18,152,20],[152,19,152,21,"onSpeechPartialResults"],[152,41,152,43],[152,44,152,46,"fn"],[152,46,152,48],[153,4,153,4],[154,4,154,4],[154,8,154,8,"onSpeechVolumeChanged"],[154,29,154,29,"onSpeechVolumeChanged"],[154,30,154,30,"fn"],[154,32,154,32],[154,34,154,34],[155,6,155,8],[155,10,155,12],[155,11,155,13,"_events"],[155,18,155,20],[155,19,155,21,"onSpeechVolumeChanged"],[155,40,155,42],[155,43,155,45,"fn"],[155,45,155,47],[156,4,156,4],[157,2,157,0],[158,2,158,0,"exports"],[158,9,158,7],[158,10,158,8,"default"],[158,17,158,15],[158,20,158,18],[158,24,158,22,"RCTVoice"],[158,32,158,30],[158,33,158,31],[158,34,158,32],[159,0,158,33],[159,3]],"functionMap":{"names":["<global>","<anonymous>","RCTVoice","RCTVoice#constructor","_events.onSpeechStart","_events.onSpeechRecognized","_events.onSpeechEnd","_events.onSpeechError","_events.onSpeechResults","_events.onSpeechPartialResults","_events.onSpeechVolumeChanged","RCTVoice#removeAllListeners","RCTVoice#destroy","Promise$argument_0","Voice.destroySpeech$argument_0","_listeners.map$argument_0","RCTVoice#start","Object.keys.map$argument_0","callback","RCTVoice#stop","Voice.stopSpeech$argument_0","RCTVoice#cancel","Voice.cancelSpeech$argument_0","RCTVoice#isAvailable","Voice.isSpeechAvailable$argument_0","RCTVoice#getSpeechRecognitionServices","RCTVoice#isRecognizing","Voice.isRecognizing$argument_0","RCTVoice#set__onSpeechStart","RCTVoice#set__onSpeechRecognized","RCTVoice#set__onSpeechEnd","RCTVoice#set__onSpeechError","RCTVoice#set__onSpeechResults","RCTVoice#set__onSpeechPartialResults","RCTVoice#set__onSpeechVolumeChanged"],"mappings":"AAA;wDCC;CDE;AEO;ICC;2BCI,SD;gCEC,SF;yBGC,SH;2BIC,SJ;6BKC,SL;oCMC,SN;mCOC,SP;KDE;ISC;KTQ;IUC;2BCI;gCCC;4CCM,6BD;aDK;SDC;KVC;IcC;4DCE,yDD;2BHE;6BKC;aLO;SGY;KdC;IiBC;2BNI;6BOC;aPO;SMC;KjBC;ImBC;2BRI;+BSC;aTO;SQC;KnBC;IqBC;2BVC;oCWC;aXO;SUC;KrBC;IuBI;KvBM;IwBC;2BbC;gCcC,yCd;SaC;KxBC;I0BC;K1BE;I2BC;K3BE;I4BC;K5BE;I6BC;K7BE;I8BC;K9BE;I+BC;K/BE;IgCC;KhCE;CFC"},"hasCjsExports":true},"type":"js/module"}]}